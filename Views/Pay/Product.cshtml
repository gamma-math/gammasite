@using GamMaSite.ViewModels;
@inject UserManager<SiteUser> UserManager
@model ProductInfo;

@{
    ViewData["Title"] = "Produktside";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script src="https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=fetch"></script>
    <script src="https://js.stripe.com/v3/"></script>
    <script type="text/javascript">
        // Create an instance of the Stripe object with your publishable API key
        var stripe = Stripe(document.getElementById("apiKey").value);
        var checkoutButton = document.getElementById("checkout-button");
        checkoutButton.addEventListener("click", function () {
            var productId = document.getElementById("product").value;
            var userId = document.getElementById("user").value;
            fetch(window.location.origin + "/api/Stripe/Product?product=" + productId + "&user=" + userId, {
                method: "POST",
            })
                .then(function (response) {
                    return response.json();
                })
                .then(function (session) {
                    return stripe.redirectToCheckout({ sessionId: session.id });
                })
                .then(function (result) {
                    if (result.error) {
                        alert(result.error.message);
                    }
                })
                .catch(function (error) {
                    console.error("Error:", error);
                });
        });
    </script>
}

<h1>Detaljer om @Model.Product.Name.ToLower()</h1>

<section>
    <table class="table table-sm table-bordered" id="produkter">
        <thead class="thead-dark">
            <tr>
                <th>Navn</th>
                <th>Beskrivelse</th>
                <th>Pris</th>
            </tr>
        </thead>
        <tr>
            <td>@Model.Product.Name</td>
            <td>@Model.Product.Description</td>
            <td>@(@Model.Price.UnitAmount/100) kr.</td>
        </tr>
    </table>
    @if (!string.IsNullOrEmpty(Model.GetMetadata("Additional")))
    {
        <p>@Model.GetMetadata("Additional")</p>
    }
    @if (!string.IsNullOrEmpty(Model.GetMetadata("Conditions")))
    {
        <p>Ved køb accepteres de gældende <a href="@Model.GetMetadata("Conditions")">@Model.GetMetadata("ConditionsName")</a>.</p>
    }
    <input type="hidden" id="user" value="@UserManager.FindByNameAsync(@User.Identity.Name).Result.Id" />
    <input type="hidden" id="product" value="@Model.Product.Id" />
    <input type="hidden" id="apiKey" value="@Model.ApiKey" />
    <button type="submit" class="btn btn-primary" id="checkout-button">Køb @Model.Product.Name.ToLower()</button>
</section>
